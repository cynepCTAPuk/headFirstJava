/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jdbc;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.sql.*;

import static org.junit.Assert.*;

public class AppTest {
    private static Connection connection;

    private Connection getNewConnection() throws SQLException {
        String url = "jdbc:h2:file:C:/0/test";
//        String url = "jdbc:h2:mem:test";
//        String url = "jdbc:h2:~/test";
        String user = "sa";
        String passwd = "password";
        return DriverManager.getConnection(url, user, passwd);
    }

    private int executeUpdate(String query) throws SQLException {
        Statement statement = connection.createStatement();
        // Для Insert, Update, Delete
        int result = statement.executeUpdate(query);
        return result;
    }

/*
    private void createCustomerTable() throws SQLException {
        String customerTableQuery = "CREATE TABLE customers " +
                "(id INTEGER PRIMARY KEY, name TEXT, age INTEGER)";
        String customerEntryQuery = "INSERT INTO customers " +
                "VALUES (73, 'Brian', 33)";
        executeUpdate(customerTableQuery);
        executeUpdate(customerEntryQuery);
    }
*/


/*
    @Before
    public void init() throws SQLException {
        connection = getNewConnection();
    }

    @After
    public void close() throws SQLException {
        connection.close();
    }
*/

/*
    @Test
    public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }
*/

    @Test
    public void shouldGetJdbcConnection() throws SQLException {
        try (Connection connection = getNewConnection()) {
            assertTrue(connection.isValid(1));
            assertFalse(connection.isClosed());
        }
    }

/*
	@Test
	public void shouldCreateCustomerTable() throws SQLException {
		createCustomerTable();
		connection.createStatement().execute("SELECT * FROM customers");
	}
	@Test
	public void shouldSelectData() throws SQLException {
		createCustomerTable();
		String query = "SELECT * FROM customers WHERE name = ?";
		PreparedStatement statement = connection.prepareStatement(query);
		statement.setString(1, "Brian");
		boolean hasResult = statement.execute();
		assertTrue(hasResult);
	}
*/

}
